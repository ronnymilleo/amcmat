% Generated by MATLAB(R) 9.8 (R2020a) and Communications Toolbox 7.3 (R2020a).
% Generated on: 13-Jan-2021 16:40:02
% Updated by Ronny Milleo
% Last update: 19-10-2021
function [output] = generate_psk(M,L,SPS,SNR,phase)
%   M = modulation order
%   L = frame size
%   Fs = symbol rate (sym/s)
%   SPS = samples per symbol
%   SNR = signal to noise ratio
%% Generate PSK Waveform
rng('shuffle')
% input bit source:
if M == 2
    in = randi([0, 1], (L + 8), 1);
elseif M == 4
    in = randi([0, 1], (L + 8)*2, 1);
elseif M == 8
    in = randi([0, 1], (L + 8)*3, 1);
end
usedInput = in(1:log2(M)*(floor(length(in)/log2(M))));
tmp = reshape(usedInput, log2(M), length(usedInput)/log2(M));
symbolInput = bi2de(tmp', 'left-msb');

% waveform generation:
waveform = pskmod(symbolInput, M, 0, 'gray');

% filtering:
rcFilter = comm.RaisedCosineTransmitFilter('Shape', 'Square root', ...
    'RolloffFactor', 0.25, ...
    'OutputSamplesPerSymbol', SPS, ...
    'FilterSpanInSymbols', 10);
waveform = rcFilter(waveform);
%% Impair QAM Waveform
% Phase Offset
waveform = waveform * exp(1i*phase);

% AWGN
waveform = awgn(waveform, SNR, 'measured', 'db');

% Normalize power to 0 dB
waveform = waveform / rms(waveform);
output = waveform(65:end);
end