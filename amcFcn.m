function [y1] = amcFcn(x1)
%AMCFCN neural network simulation function.
%
% Auto-generated by MATLAB, 10-Oct-2019 21:53:19.
% 
% [y1] = amcFcn(x1) takes these arguments:
%   x = 9xQ matrix, input #1
% and returns:
%   y = 6xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.276438332452968;1.56777096550466;0.122826771497788;0.136733567189685;2.278084520966;0.112680559754153;0.0149956596253773;0.0735946999135992;0.12245863539301];
x1_step1.gain = [1.54493866164486;3.5796373250959;7.34373813553661;5.83062522918746;0.728490932018239;0.00764619185637351;3.30000575322756;4.88327630085227;3.00431956610412];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.8179511819580147503;6.6444372951662380444;8.0652821649744161903;-1.2942557993405245931;-0.063103587608593539326;0.48708744123454633668;-1.1695796102266717842;2.1510720123411735116;-1.375276992532430409;-2.6619473769742447722];
IW1_1 = [-14.016776522028438379 2.0479243528117874185 -3.7934444993000502322 -2.6283099257726862952 0.029667468225715681179 0.10319054759523216269 2.1056636690366423714 -0.25786309340045449057 -3.0273138400632473299;0.8123800700412227016 1.1625616213660783238 5.1100142771388030738 -7.617144156336943972 0.79170168503423832274 0.55186783553947071912 2.1076955372136461087 -0.19370461508237035719 -0.61226636411746637734;-0.56908484423944383224 0.85505723295509927784 11.246728860466719269 -10.981475970887007776 1.3718309170581473033 -0.53249982737395995525 3.3515024518958460575 4.5917735221108859633 4.7672110324864389597;1.8042614592417707264 -1.7984489441614195382 -7.1996335114229701446 9.5476686590022232792 0.03511682761344118997 1.306198089491726444 -2.5539054386902195759 -1.8953327987546937372 -2.0529497997218726368;0.095059025242635084019 0.44089340664903192701 -2.3161131407727997278 0.0019255956383135573902 -0.14986761926938679812 0.25751811603401009165 -1.4329077194305701592 -0.17003586952479413097 -1.5461573468773242013;1.9328470590454747136 -1.9735591782172670072 -3.8399278906769351849 4.968733280719868084 0.24761195137607719396 1.1676162599659378749 2.3562512739722225596 -4.1534597474310483989 2.0865040534583214615;-4.4043310898123273489 -0.34743245916234438697 0.78543096376321575036 1.7730552793777738518 0.48427232673492653925 -0.17095391206988971855 4.2723893348411410287 -0.083501489105613432851 3.4917687629890448164;-5.8611054090184007137 0.23352853189203956474 0.54117857247573109003 -3.2271759367531807072 -0.22615605350439307863 -0.019758623739727195628 -0.028281860907341801331 -0.6916382506772873473 -1.583030718111787527;-0.25088912264256613138 -1.4544186850966760449 2.0859461382350232839 1.366982014268318224 0.033378136497048384312 -0.23680847388707457202 2.5790679186254386046 -0.63899595974066702997 1.7739173198419917465;-2.0784944373669294038 -0.76062446278309991943 -1.7955907187109578782 4.4392158422938132745 0.092349362770384885168 -0.31293229730556237911 3.2588816622801028977 0.37257318766559671674 1.3748615309509255589];

% Layer 2
b2 = [1.7699223631545613067;1.9219315919899597755;-1.9502083579268985059;-0.8201525222683568872;-1.5600838058740211789;-0.89856727303912242721;2.0203660795712292675;0.82876501162992244343];
LW2_1 = [1.0059396667292626049 3.6154716094232428603 -5.8775122660078409353 -3.6323246241088202879 -4.2510230985955272942 1.8335217771746190607 -4.8036662530962512818 1.4860302952284505373 -1.2701454165864667356 5.7596252714369438053;-1.4162201653539263635 2.3921219555982582428 0.81792225154454012426 -0.63448173959889075935 2.5473774916137914559 0.32235751172171184242 -0.13504699847672346769 2.7241186725552757331 0.77722087075357282338 0.16207001568834150662;3.3050962579253555518 -0.67923168965245339646 -0.21742114549699825821 -0.693306041193712419 4.8954659023659381489 0.33289698066850559321 -1.4785008047626744254 -3.7077183149668813122 2.2765233756784035712 2.3594156743933933917;-6.2910023610679495221 -0.023456105885759661461 -0.84264455527900372633 -1.2887089029358202996 1.2092031799998659292 2.8437365697125707165 3.3385866101306862497 4.0808631142590456875 -7.5428415582313110832 0.45267985419297918082;-1.6822601005087820525 -3.1873878935891633013 2.7056542109894112791 -1.1101264512100983417 0.56494295396203608739 1.8663343364474107577 0.69079428284286126249 -0.69608181274765212887 -0.18799969370489016951 3.4917581064173237593;-0.67052941677384603203 0.24878283630654141056 -0.030279234880405379166 -1.8973215048196201415 1.402964495826292568 -0.69793627556562798375 0.87381884080706562212 0.49026277418623176452 0.26160482625655467892 -0.19343198541437037208;-1.737682621729030874 -2.7582936155364992104 3.0029796630411018654 -1.7162804746841446857 0.033546362259069123501 0.96592622702056596395 -1.1174747659551160783 3.0130111588826808955 2.9353731235942843725 1.3261207885625565517;0.54337103567266831217 -0.14806595530897020963 0.87473028064061819631 -0.75416896105342845491 0.54305405185395472234 -1.5094887439810455998 -0.9745101681799923643 0.32437573630114013845 -1.5766932588900510748 -1.0247705871836594316];

% Layer 3
b3 = [0.039744568591236296984;0.073848034062322986948;-0.40404565835535438678;0.90660236185719922375;3.1196416715726664748;0.8208855323658366121];
LW3_2 = [5.8437677815128488135 -1.2322489940008711784 -5.0046435827663637852 -0.24959784885193761483 3.906943697697839557 1.8389320162458460128 -7.9693172591976679797 -1.7806983497747681522;-1.5094900482940336595 3.2464639849851697484 -3.4723267879292647464 -0.50653020032428752728 -0.86896497569881292478 -1.1251806814405038715 1.9334605085288414372 0.0077210991390444100313;-0.58052524828577600768 -1.4293274214484568141 -2.771067132122328136 9.9655242307595806039 0.57631228824444280523 -1.1008735423680628962 1.4964972329468617662 -0.64638140641783792262;-5.7481144422482497447 2.5606084490909859497 7.2797021301877071764 0.44442562946974800697 -1.3738813587912905856 -2.4285871153242601928 3.9470926622017077356 0.07055715517127882086;4.4724388913302313142 1.7234419726765084491 1.143524006452974362 5.8727775264092425545 3.5595677059832220301 0.22912829476945581475 1.6359097811719565119 1.5016279164976453764;-0.30322872310523907302 2.3835904781571763955 4.2494472073568649861 -0.90967649857148691339 -1.0616058725240065108 -0.47035854095704365818 0.55361223032087980567 -1.2656889970630182951];

% Layer 4
b4 = [-2.4506409159731687986;-1.1934247442918206605;1.236395599537117862;-1.1469832834337798655;2.9723243026172418979;0.034668346958535226077];
LW4_3 = [-1.6843956834546542911 -1.4163506347649816863 -4.656710359164649482 8.0846628598198275739 -5.2410914971401920681 -7.019231908847079815;-2.6456476772493360272 -1.7016301789845544867 -5.7665378230181252306 -2.3763080434272421115 2.5298860106501002143 -7.2615929739801714504;-5.0817403568456720464 1.7313321038706945831 7.0968287052640661727 0.20258781652587409816 -0.3566489184989978245 -2.6367100372187466384;4.2553140481627025338 1.0156041072802364233 4.7807251675752242548 6.1633557718470015629 -1.2169434180127642886 8.2212033791206700073;-0.83049709206296007391 -1.1801357365178541947 2.2051470733196811835 -6.6015016539920097216 3.2626727745137760195 6.9344878105613600994;6.3771854359906816612 0.083112199304071876504 -4.5401034206086325895 -5.2211802396101765211 -0.5164780042531733617 0.77657152144824070916];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);

% Layer 3
a3 = tansig_apply(repmat(b3,1,Q) + LW3_2*a2);

% Layer 4
a4 = softmax_apply(repmat(b4,1,Q) + LW4_3*a3);

% Output 1
y1 = a4;
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Competitive Soft Transfer Function
function a = softmax_apply(n,~)
  if isa(n,'gpuArray')
    a = iSoftmaxApplyGPU(n);
  else
    a = iSoftmaxApplyCPU(n);
  end
end
function a = iSoftmaxApplyCPU(n)
  nmax = max(n,[],1);
  n = bsxfun(@minus,n,nmax);
  numerator = exp(n);
  denominator = sum(numerator,1); 
  denominator(denominator == 0) = 1;
  a = bsxfun(@rdivide,numerator,denominator);
end
function a = iSoftmaxApplyGPU(n)
  nmax = max(n,[],1);
  numerator = arrayfun(@iSoftmaxApplyGPUHelper1,n,nmax);
  denominator = sum(numerator,1);
  a = arrayfun(@iSoftmaxApplyGPUHelper2,numerator,denominator);
end
function numerator = iSoftmaxApplyGPUHelper1(n,nmax)
  numerator = exp(n - nmax);
end
function a = iSoftmaxApplyGPUHelper2(numerator,denominator)
  if (denominator == 0)
    a = numerator;
  else
    a = numerator ./ denominator;
  end
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end
