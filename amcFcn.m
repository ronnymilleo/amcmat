function [y1] = amcFcn(x1)
%AMCFCN neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 01-Oct-2019 17:34:05.
% 
% [y1] = amcFcn(x1) takes these arguments:
%   x = 10xQ matrix, input #1
% and returns:
%   y = 6xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.278093699167361;1.56411488335823;0.122700148912711;0.137011752457723;2.24388038759732;0.109621288848863;0.0148940655447781;0.0734081360910769;0.122044969834418;0.01];
x1_step1.gain = [1.54668722167241;3.28394082918975;7.27665869101006;5.74354965266189;0.557366507599982;0.0146313134014439;3.15276031269436;4.70512735336912;2.92432803380218;0.0632655595299235];
x1_step1.ymin = -1;

% Layer 1
b1 = [-3.7644117803020487045;2.6768291142619986545;7.2969522043638006537;-8.1545044449892127858;-1.9310654413858208134;-21.751424908422603011;-15.89847652481432938;0.45471149611986377836;6.8545185585706072118;-5.7268703483827634315];
IW1_1 = [1.2120607236579896693 0.50572869449276980358 -13.153738443722247098 8.6939290674694138517 -0.034583672040410684545 4.6051916974750923828 -16.435017689056913071 2.658269613624624661 21.447607621081509421 4.5392119866469906597;-9.324785683854345919 1.2800200504140375468 -2.7564112525375961127 -1.5722598701736623106 -0.0039106880407555524165 -0.39687130398522124652 0.95160127114601311682 -0.036660221498312002553 -1.1567733934756410097 2.023759624588894912;2.5467201466693909495 0.58874244216876836511 -0.0067211374863182524533 -1.9732876195711142042 0.2503065074225515052 0.35646504192079075946 -9.0563761232777899579 0.25451806477891275593 17.122126336143594472 10.246391555812182972;-0.0018229781431089858712 -0.031670911291822319289 -0.010260189074842090279 0.11257622373898200363 0.00093812844614771869096 -0.01255159481426816083 -27.378276633931527329 0.014385417746430564229 18.974497615976815723 0.47235753200216451519;-0.032793225884970050865 -1.5097952104136693752 -1.7731973543779955271 5.9104838747751431427 0.087070103826601283337 -0.82862505853767454145 -2.0747223717877076865 -0.27207504930720699532 -9.4656653011485509808 -0.74339176314418276004;-11.696728309994320227 0.55150826805550146048 -2.5629556894187812688 0.69534027219439531464 -0.29599856492214221548 -0.86178011675417098836 -20.461539454116163483 -0.30757744606793413489 22.392478866183981978 -12.179466831389053283;0.05072313332829113397 0.034220221806805235787 0.01777210207066690778 -0.12718883590530311034 0.00042585460164958700889 0.030715501210249764735 -36.679420212631242748 -0.0088511706464599118616 53.02933416752742346 -0.13202991040283376667;1.0401801538356134635 0.60606810522618914661 -14.558666078482010775 9.4466819748536430268 -0.048258139718559564524 4.2205903695826068045 14.720137963096622258 2.6803004226162552293 -13.36224285923406363 -2.0542324974618977329;-10.220261038648613905 1.8296700944919870313 -3.9835335470177621886 -2.4834431236905007978 0.15645650699220564617 -0.17240433360072282554 -5.3696700161019625952 -0.024594742495068221827 6.619524725135032206 8.7657878622707094962;3.4842973232729628208 -6.0130990943962512318 -12.859067124412179695 11.29155355168907171 -0.97906886310782870186 -0.11508192974935844977 -2.3722542249559084304 -2.5322462204194917668 1.9073523489856198943 -0.23842415315727680247];

% Layer 2
b2 = [-4.5088176812753202327;1.8397168571608275567;-3.1404201697574136709;-4.7000525049063144323;-4.1636847345650878083;-2.4976372799844863692];
LW2_1 = [9.7294913301862191446 30.016435648074232034 -14.023249630898465767 -99.546534740084126724 -2.8139037876573489427 -17.124120928780378392 -89.292052837267490872 -10.637912869179695363 -11.109545609164792168 -21.268952320724991978;0.38053867987098732861 2.1415288649156840606 -3.9867801585736528658 5.3714440069713971226 1.032680213912714251 -1.4318752107348946545 5.8016672412434839856 0.969194027145918513 -0.69159789188163500739 -0.15830245328421879702;-14.034661414162078685 -9.887086965467359434 -14.49024025446783881 -54.684073355987138143 -2.9874783554093160554 -7.1791791278023815437 -45.861688933872791551 15.182266532640969814 14.699811350792341358 3.6489600209701760214;-3.0643473875779454474 29.478548250502392136 -16.882203903362608344 34.994090261357548854 6.218639733785695789 -18.254753273351688847 44.027524168530675297 3.2157766933440661283 -9.2436683058838635674 -7.4217316607114334204;0.27817116298050797996 2.8023816028388770505 3.0983261768451568763 4.4606102181952840269 6.5713290359850837774 3.2581210417197565832 2.0966502490922516166 3.1884647680058764152 -3.9643093765809331863 0.51873751412849189446;3.8923254552253432337 -13.363408758948384758 8.6721058839327387346 14.208273549170835182 -11.833642761565965174 2.3659919669988385138 -8.0477060995906892771 0.062752250353690294804 5.5005780394052736781 0.71387923748453874229];

% Layer 3
b3 = [-4.4554230503049314649;8.8792670192927385386;7.1607957581689589688;-9.3324064878746515461;-4.6391871878684378672;2.1021514585574387901];
LW3_2 = [22.948721630824973516 29.486011723211248636 -8.304389377981371112 -30.618686464669600866 -14.914631160869019411 7.1778167872281111173;20.699892276542833258 -21.333764787654541095 -10.248421794299453325 -29.486081070357343492 6.2710732925989987052 -8.7390973638093516485;11.231817235084744055 -8.033299191224724467 -20.755278088962189287 -38.007867170795861966 2.7080153366985482144 1.5249745151635385465;-114.37463263251140688 5.5781608074532025299 -34.469609176097804948 96.742762049270297098 8.5458117947637610712 2.9110943461815672606;64.268669623875695152 3.5000871117880199002 69.460228138355290639 7.8011662324846540173 8.4248955179143880656 -3.7953796374624149124;-5.3840578171377240224 -7.5628613630270624668 5.4692175242355940412 -5.4703599719187261385 -10.784937779144001979 0.22713649877134209354];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);

% Layer 3
a3 = softmax_apply(repmat(b3,1,Q) + LW3_2*a2);

% Output 1
y1 = a3;
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Competitive Soft Transfer Function
function a = softmax_apply(n,~)
  if isa(n,'gpuArray')
    a = iSoftmaxApplyGPU(n);
  else
    a = iSoftmaxApplyCPU(n);
  end
end
function a = iSoftmaxApplyCPU(n)
  nmax = max(n,[],1);
  n = bsxfun(@minus,n,nmax);
  numerator = exp(n);
  denominator = sum(numerator,1); 
  denominator(denominator == 0) = 1;
  a = bsxfun(@rdivide,numerator,denominator);
end
function a = iSoftmaxApplyGPU(n)
  nmax = max(n,[],1);
  numerator = arrayfun(@iSoftmaxApplyGPUHelper1,n,nmax);
  denominator = sum(numerator,1);
  a = arrayfun(@iSoftmaxApplyGPUHelper2,numerator,denominator);
end
function numerator = iSoftmaxApplyGPUHelper1(n,nmax)
  numerator = exp(n - nmax);
end
function a = iSoftmaxApplyGPUHelper2(numerator,denominator)
  if (denominator == 0)
    a = numerator;
  else
    a = numerator ./ denominator;
  end
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end
