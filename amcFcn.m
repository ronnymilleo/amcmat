function [y1] = amcFcn(x1)
%AMCFCN neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 31-Oct-2019 18:37:50.
% 
% [y1] = amcFcn(x1) takes these arguments:
%   x = 10xQ matrix, input #1
% and returns:
%   y = 6xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [236.977130025254;236.986723983643;0.0012458207701113;0.00204782744810783;2.20613428976349;0.090101189204865;0.0144280941022732;0.0719352597113543;0.120124333751537;-0.714664362067576];
x1_step1.gain = [0.000535661101230978;0.000535662470692268;103.497144413968;66.9534697432588;0.306693094304057;0.0244632863554842;2.92562086570787;4.44900604305492;2.79417805606502;0.905541246610893];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.4063467126882114311;2.8292340168128071731;2.7403619004174251117;1.2796449618143428406;-2.7532416921764029105;0.30986381899608855806;0.95636724855363208775;-0.77434077605705953218;-2.0846067105123680108;-0.40211041430820848586];
IW1_1 = [1.7634314217003579373 3.3026289133534896258 0.38727841490307646222 6.9271674811584009746 1.1642864475651950595 -0.70155237297009476194 1.1418906386703764344 0.4301661959495428067 1.348312578997012734 0.27635140495125798399;1.2171477601894131748 0.48199942877439488909 0.18915415242316455102 -4.7850209470046207727 0.7199636395506158193 -1.2114072873560755017 -1.2924183048967745613 -0.1929018010224060331 -1.4115922326427543521 -0.11438479452718838814;-4.5872590520076244047 -4.681305461192808437 -5.5505961919544484218 2.1568767057988096347 -0.25523844364503472937 0.69566880214630977264 -1.0109350311224489793 -0.02810499826533048584 0.70066435469146004511 0.0038136402779131023388;-0.53887906045994182769 -0.47556453334002307676 -0.061830903916410426269 -2.1924147288136484057 -0.57829369801080454661 -1.3601871384248613861 4.6454700284786332176 0.26802693051647397127 2.5692757342220700068 3.5718087828392306449;6.0476635390824631244 5.342091283716573713 4.6714440224582283179 4.0306658110629740577 1.0844558024074719693 0.31682195422910053306 1.0531740120925083826 -0.59221240572501543387 -0.05754129578459135641 -0.41123507558150240726;0.77342120147875548231 0.26120560761127087357 6.4075785830246836383 -7.4165719665154217211 0.29109799601287600357 0.064882894865625526104 0.66064352067979992267 -0.27356972162534298754 -1.5094964294929649196 -0.57478756255810237175;1.4984158282478441393 1.6910992353862674964 2.8966561483061528115 -2.8453307959584006603 0.5351121064497789126 -0.073880989684286857422 -2.4057315548047930598 -0.71563376005787671108 -2.4023199838622315561 -1.0249487876168055234;-1.2709938726970992917 -0.46228833302541744166 -1.1989558419057115835 -0.49785016975058482558 -0.071718718597227198996 -0.21987669756292904655 -0.89266160343117628706 0.43006087823627192623 -0.4596731246128430981 0.95216081316731038253;-1.4011676091161082702 -0.85468981853209657906 1.8518415012467928094 0.58640462431215678585 -0.31257273482524439157 0.4465166344562166989 2.4261924770409488694 0.36655944753778479939 2.6335198805122428389 -0.31964082950284583573;-1.4560075652018313885 -1.5811896588166358679 3.2198261668833736415 -4.1417711109056121188 -0.2401158871473607348 0.98276380412137309683 -2.0496065804809182609 -0.25786458443924148431 -0.39127636440306745591 -0.33434813648912664608];

% Layer 2
b2 = [-2.6338958615138219344;-2.6048438104474138655;0.24735812590642883291;-1.2658938283084577581;-0.89070125315430537238;1.8972864963256046433];
LW2_1 = [-2.9176991997827812497 -1.4929793811962766004 -5.7833745217507059877 1.4616666190413993842 0.34555096480796065883 5.630348572080960956 2.7024420253420653459 1.3291578703527962002 0.45778737777185357638 -1.8288737541631108208;2.6755941093406057085 2.8241817051906874525 6.3645871603222206048 0.88604034692165989373 1.0153109637476871452 0.77616006916529334259 1.3519588939414588502 -1.6970894770123474693 2.5806095992175217546 0.95461512888986921332;2.0757305279292728173 0.92516059905411007769 -0.12815692696095068448 -0.42472866364635963876 0.49919651855876245872 -2.0625155889309825241 0.4905211019492214386 2.3355820367210737842 2.2325582288085756844 1.8534478983401498908;-3.06839801398399592 -0.64416865292327674108 -0.86495854736649446792 3.4914574528839761314 -2.4852891246614743359 -3.3129967434727247699 6.4503116071955552968 4.4122863985500329065 3.9325198022655976082 -5.2349975090589486726;-1.770522852139544856 -0.7255698595938355755 0.82266391105999958633 4.7194985332203636119 -0.16210230434029412883 6.0299246980210812197 -0.82819534144009010479 -1.0058442270080851788 0.12875744172537656462 -1.6742902297846706805;2.3396038815395701072 -0.55614341697813352017 1.3712219229804392118 -1.8889245872099753587 -0.96356626043217441513 1.5515458837075497556 -4.5120031057461895685 -1.8383811438294241913 -2.4224899468523686252 -1.9510662821122168875];

% Layer 3
b3 = [-2.0225260056308735912;-1.4922031424412744993;3.7303231434639241293;0.5184002177326344496;-0.81855844263095356439;0.71043386886824644311];
LW3_2 = [-5.4760740754514785067 4.259555767182677144 0.30493602822999971158 3.5620638041788881267 -6.1822742463040043503 -6.7654781097614522523;-4.3877903257760042521 4.0077795259734152467 -7.8393184739765739977 3.2639189629767346723 5.2508370991758779311 1.0471427969048316964;0.19975786592503710914 1.3266348878089588847 0.59732253093775411479 -5.3241569111110225165 -1.4588673473007267578 5.4929658796090761186;5.6339714174643482636 -3.8218142514934263509 -2.1526612276214400765 2.3688574680852991783 6.0697947573161705748 1.3906624568429204469;4.6236185392222788337 -8.5596738515288137705 1.282012028527443448 -5.4435719179658530464 -4.4189115026556562427 -2.1848769713675331161;-0.5176974202627481203 2.8034492515507656307 5.1716629215086218352 2.2770481138945299904 2.5153683847535721618 0.77373209952289578872];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);

% Layer 3
a3 = softmax_apply(repmat(b3,1,Q) + LW3_2*a2);

% Output 1
y1 = a3;
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Competitive Soft Transfer Function
function a = softmax_apply(n,~)
  if isa(n,'gpuArray')
    a = iSoftmaxApplyGPU(n);
  else
    a = iSoftmaxApplyCPU(n);
  end
end
function a = iSoftmaxApplyCPU(n)
  nmax = max(n,[],1);
  n = bsxfun(@minus,n,nmax);
  numerator = exp(n);
  denominator = sum(numerator,1); 
  denominator(denominator == 0) = 1;
  a = bsxfun(@rdivide,numerator,denominator);
end
function a = iSoftmaxApplyGPU(n)
  nmax = max(n,[],1);
  numerator = arrayfun(@iSoftmaxApplyGPUHelper1,n,nmax);
  denominator = sum(numerator,1);
  a = arrayfun(@iSoftmaxApplyGPUHelper2,numerator,denominator);
end
function numerator = iSoftmaxApplyGPUHelper1(n,nmax)
  numerator = exp(n - nmax);
end
function a = iSoftmaxApplyGPUHelper2(numerator,denominator)
  if (denominator == 0)
    a = numerator;
  else
    a = numerator ./ denominator;
  end
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end
