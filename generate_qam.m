% Generated by MATLAB(R) 9.8 (R2020a) and Communications Toolbox 7.3 (R2020a).
% Generated on: 13-Jan-2021 15:29:31
% Updated by Ronny Milleo
% Last update: 19-10-2021
function [output] = generate_qam(M,L,SPS,SNR,phase)
%   M = modulation order
%   L = frame size
%   Fs = symbol rate (sym/s)
%   SPS = samples per symbol
%   SNR = signal to noise ratio
%% Generate QAM Waveform
rng('shuffle')
% input bit source:
if M == 16
    in = randi([0, 1], (L + 8)*4, 1);
elseif M == 64
    in = randi([0, 1], (L + 8)*6, 1);
end
% waveform generation:
waveform = qammod(in, M, 'gray', 'InputType', 'bit', 'UnitAveragePower', true);

% filtering:
rcFilter = comm.RaisedCosineTransmitFilter('Shape', 'Square root', ...
    'RolloffFactor', 0.2, ...
    'OutputSamplesPerSymbol', SPS, ...
    'FilterSpanInSymbols', 10);
waveform = rcFilter(waveform);
%% Impair QAM Waveform
% Phase Offset
waveform = waveform * exp(1i*phase);

% AWGN
waveform = awgn(waveform, SNR, 'measured');

% Normalize power to 0 dB
waveform = waveform / rms(waveform);
output = waveform(65:end);
end